{"version":3,"sources":["cron-gen.module.js","templates.js"],"names":["classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","err","Array","isArray","toConsumableArray","arr2","from","CronGenComponent","$scope","$translate","$filter","cronGenService","_this","this","ACCEPTABLE_CRON_FORMATS","States","INIT","DIRTY","CLEAN","parsedOptions","mergeDefaultOptions","options","use","language","angular","extend","filter","cronFormat","currentState","activeTab","hideMinutesTab","hideHourlyTab","hideDailyTab","hideWeeklyTab","hideMonthlyTab","hideYearlyTab","hideAdvancedTab","selectOptions","state","minutes","seconds","hourly","hours","daily","subTab","everyDays","days","use24HourTime","hourType","everyWeekDay","weekly","MON","TUE","WED","THU","FRI","SAT","SUN","monthly","specificDay","day","months","specificWeekDay","monthWeek","yearly","specificMonthDay","month","specificMonthWeek","advanced","expression","indexOf","$watch","cron","handleModelChange","_this2","formCtrl","name","ngModelCtrl","$validators","testCronExpr","isValid","$event","tab","preventDefault","ngDisabled","regenerateCron","monthWeekNumber","#1","#2","#3","#4","#5","L","monthNumber","1","2","3","4","5","6","7","8","9","10","11","12","monthDay","appendInt","hour","formInputClass","formSelectClass","formRadioClass","formCheckboxClass","hideSeconds","_this3","ngModel","hourToCron","reduce","acc","concat","join","_this4","segments","split","_segments","dayOfMonth","dayOfWeek","match","parseInt","substring","parsedHours","processHour","getHourType","_parsedHours","forEach","weekDay","_parsedHours2","_parsedHours3","substr","_parsedHours4","_parsedHours5","_day","_monthWeek","_parsedHours6","QUARTZ_REGEX","CronGenService","formattedExpression","toUpperCase","number","charAt","start","end","map","val","idx","range","monthWeeks","fullMinutes","monthDays","monthDaysWithLasts","CronGenTimeSelect","hourTypes","module","config","$translateProvider","translations","MINUTES","HOURLY","DAILY","WEEKLY","MONTHLY","YEARLY","ADVANCED","EVERY","MINUTE","ON_SECOND","HOUR_ON_MINUTE","AND_SECOND","DAY_AT","EVERY_WEEK_WORKING_DAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","START_TIME","ON_THE","OF_EVERY","MONTHS_AT","AT","OF","CRON_EXPRESSION","MORE_DETAILS","HERE","LAST_DAY","LAST_WEEKDAY","FIRST_WEEKDAY","DAY","FIRST_PREFIX","SECOND_PREFIX","THIRD_PREFIX","CARDINAL_PREFIX","FIRST","SECOND","THIRD","FOURTH","FIFTH","LAST","JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER","service","component","bindings","isDisabled","onChange","isRequired","model","selectClass","namePrefix","templateUrl","controller","require","ngDisabledCtrl","$attrs","$templateCache","put"],"mappings":"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","file":"cron-gen.min.js","sourcesContent":["(function () {\n'use strict';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar CronGenComponent = function () {\n    function CronGenComponent($scope, $translate, $filter, cronGenService) {\n        'ngInject';\n\n        var _this = this;\n\n        classCallCheck(this, CronGenComponent);\n        var ACCEPTABLE_CRON_FORMATS = ['quartz'];\n        var States = {\n            INIT: 1,\n            DIRTY: 2,\n            CLEAN: 3\n        };\n        this.parsedOptions = this.mergeDefaultOptions(this.options);\n\n        $translate.use(this.parsedOptions.language);\n\n        angular.extend(this, {\n            cronGenService: cronGenService,\n            filter: $filter,\n            cronFormat: 'quartz',\n            currentState: States.INIT,\n            activeTab: function () {\n                if (!_this.parsedOptions.hideMinutesTab) {\n                    return 'minutes';\n                } else if (!_this.parsedOptions.hideHourlyTab) {\n                    return 'hourly';\n                } else if (!_this.parsedOptions.hideDailyTab) {\n                    return 'daily';\n                } else if (!_this.parsedOptions.hideWeeklyTab) {\n                    return 'weekly';\n                } else if (!_this.parsedOptions.hideMonthlyTab) {\n                    return 'monthly';\n                } else if (!_this.parsedOptions.hideYearlyTab) {\n                    return 'yearly';\n                } else if (!_this.parsedOptions.hideAdvancedTab) {\n                    return 'advanced';\n                }\n                throw 'No tabs available to make active';\n            }(),\n            selectOptions: cronGenService.selectOptions(),\n            state: {\n                minutes: {\n                    minutes: 1,\n                    seconds: 0\n                },\n                hourly: {\n                    hours: 1,\n                    minutes: 0,\n                    seconds: 0\n                },\n                daily: {\n                    subTab: 'everyDays',\n                    everyDays: {\n                        days: 1,\n                        hours: this.parsedOptions.use24HourTime ? 0 : 1,\n                        minutes: 0,\n                        seconds: 0,\n                        hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n                    },\n                    everyWeekDay: {\n                        hours: this.parsedOptions.use24HourTime ? 0 : 1,\n                        minutes: 0,\n                        seconds: 0,\n                        hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n                    }\n                },\n                weekly: {\n                    MON: true,\n                    TUE: false,\n                    WED: false,\n                    THU: false,\n                    FRI: false,\n                    SAT: false,\n                    SUN: false,\n                    hours: this.parsedOptions.use24HourTime ? 0 : 1,\n                    minutes: 0,\n                    seconds: 0,\n                    hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n                },\n                monthly: {\n                    subTab: 'specificDay',\n                    specificDay: {\n                        day: '1',\n                        months: 1,\n                        hours: this.parsedOptions.use24HourTime ? 0 : 1,\n                        minutes: 0,\n                        seconds: 0,\n                        hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n                    },\n                    specificWeekDay: {\n                        monthWeek: '#1',\n                        day: 'MON',\n                        months: 1,\n                        hours: this.parsedOptions.use24HourTime ? 0 : 1,\n                        minutes: 0,\n                        seconds: 0,\n                        hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n                    }\n                },\n                yearly: {\n                    subTab: 'specificMonthDay',\n                    specificMonthDay: {\n                        month: 1,\n                        day: '1',\n                        hours: this.parsedOptions.use24HourTime ? 0 : 1,\n                        minutes: 0,\n                        seconds: 0,\n                        hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n                    },\n                    specificMonthWeek: {\n                        monthWeek: '#1',\n                        day: 'MON',\n                        month: 1,\n                        hours: this.parsedOptions.use24HourTime ? 0 : 1,\n                        minutes: 0,\n                        seconds: 0,\n                        hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n                    }\n                },\n                advanced: {\n                    expression: '0 15 10 L-2 * ?'\n                }\n            }\n        });\n\n        //Validate our opts\n        if (ACCEPTABLE_CRON_FORMATS.indexOf(this.cronFormat) == -1) {\n            throw 'Desired cron format (' + this.cronFormat + ') is not available';\n        }\n\n        //On model changes, update our state to reflect the user's input\n        $scope.$watch('$ctrl.ngModel', function (cron) {\n            return _this.handleModelChange(cron);\n        });\n\n        // Watch for option changes\n        $scope.$watch('$ctrl.options', function (options) {\n            return _this.parsedOptions = _this.mergeDefaultOptions(options);\n        }, true);\n    }\n\n    createClass(CronGenComponent, [{\n        key: '$onInit',\n        value: function $onInit() {\n            var _this2 = this;\n\n            //If possible, add our cron expression validator to our form\n            if (this.formCtrl && this.name) {\n                this.ngModelCtrl.$validators.testCronExpr = function (expression) {\n                    return _this2.cronGenService.isValid(_this2.cronFormat, expression);\n                };\n            }\n        }\n    }, {\n        key: 'setActiveTab',\n        value: function setActiveTab($event, tab) {\n            $event.preventDefault();\n            if (!this.ngDisabled) {\n                this.activeTab = tab;\n                this.regenerateCron();\n            }\n        }\n    }, {\n        key: 'dayDisplay',\n        value: function dayDisplay(day) {\n            var DAY_LOOKUPS = {\n                'SUN': this.filter('translate')('SUNDAY'),\n                'MON': this.filter('translate')('MONDAY'),\n                'TUE': this.filter('translate')('TUESDAY'),\n                'WED': this.filter('translate')('WEDNESDAY'),\n                'THU': this.filter('translate')('THURSDAY'),\n                'FRI': this.filter('translate')('FRIDAY'),\n                'SAT': this.filter('translate')('SATURDAY')\n            };\n            return DAY_LOOKUPS[day];\n        }\n    }, {\n        key: 'monthWeekDisplay',\n        value: function monthWeekDisplay(monthWeekNumber) {\n            var MONTH_WEEK_LOOKUPS = {\n                '#1': this.filter('translate')('FIRST'),\n                '#2': this.filter('translate')('SECOND'),\n                '#3': this.filter('translate')('THIRD'),\n                '#4': this.filter('translate')('FOURTH'),\n                '#5': this.filter('translate')('FIFTH'),\n                'L': this.filter('translate')('LAST')\n            };\n            return MONTH_WEEK_LOOKUPS[monthWeekNumber];\n        }\n    }, {\n        key: 'monthDisplay',\n        value: function monthDisplay(monthNumber) {\n            var MONTH_LOOKUPS = {\n                '1': this.filter('translate')('JANUARY'),\n                '2': this.filter('translate')('FEBRUARY'),\n                '3': this.filter('translate')('MARCH'),\n                '4': this.filter('translate')('APRIL'),\n                '5': this.filter('translate')('MAY'),\n                '6': this.filter('translate')('JUNE'),\n                '7': this.filter('translate')('JULY'),\n                '8': this.filter('translate')('AUGUST'),\n                '9': this.filter('translate')('SEPTEMBER'),\n                '10': this.filter('translate')('OCTOBER'),\n                '11': this.filter('translate')('NOVEMBER'),\n                '12': this.filter('translate')('DECEMBER')\n            };\n            return MONTH_LOOKUPS[monthNumber];\n        }\n    }, {\n        key: 'monthDayDisplay',\n        value: function monthDayDisplay(monthDay) {\n            if (monthDay === 'L') {\n                return this.filter('translate')('LAST_DAY');\n            } else if (monthDay === 'LW') {\n                return this.filter('translate')('LAST_WEEKDAY');\n            } else if (monthDay === '1W') {\n                return this.filter('translate')('FIRST_WEEKDAY');\n            } else {\n                return '' + monthDay + this.cronGenService.appendInt(monthDay) + ' ' + this.filter('translate')('DAY');\n            }\n        }\n    }, {\n        key: 'processHour',\n        value: function processHour(hours) {\n            if (this.parsedOptions.use24HourTime) {\n                return hours;\n            } else {\n                return (hours + 11) % 12 + 1;\n            }\n        }\n    }, {\n        key: 'getHourType',\n        value: function getHourType(hours) {\n            return this.parsedOptions.use24HourTime ? null : hours >= 12 ? 'PM' : 'AM';\n        }\n    }, {\n        key: 'hourToCron',\n        value: function hourToCron(hour, hourType) {\n            if (this.parsedOptions.use24HourTime) {\n                return hour;\n            } else {\n                return hourType === 'AM' ? hour === 12 ? 0 : hour : hour === 12 ? 12 : hour + 12;\n            }\n        }\n    }, {\n        key: 'mergeDefaultOptions',\n        value: function mergeDefaultOptions(options) {\n            return angular.extend({\n                formInputClass: 'form-control cron-gen-input',\n                formSelectClass: 'form-control cron-gen-select',\n                formRadioClass: 'form-control-static cron-gen-radio',\n                formCheckboxClass: 'form-control-static cron-gen-checkbox',\n                hideMinutesTab: false,\n                hideHourlyTab: false,\n                hideDailyTab: false,\n                hideWeeklyTab: false,\n                hideMonthlyTab: false,\n                hideYearlyTab: false,\n                hideAdvancedTab: true,\n                use24HourTime: false,\n                hideSeconds: false,\n                language: 'en'\n            }, options);\n        }\n    }, {\n        key: 'regenerateCron',\n        value: function regenerateCron() {\n            var _this3 = this;\n\n            this.currentState = States.DIRTY;\n            switch (this.activeTab) {\n                case 'minutes':\n                    this.ngModel = this.state.minutes.seconds + ' 0/' + this.state.minutes.minutes + ' * 1/1 * ? *';\n                    break;\n                case 'hourly':\n                    this.ngModel = this.state.hourly.seconds + ' ' + this.state.hourly.minutes + ' 0/' + this.state.hourly.hours + ' 1/1 * ? *';\n                    break;\n                case 'daily':\n                    switch (this.state.daily.subTab) {\n                        case 'everyDays':\n                            this.ngModel = this.state.daily.everyDays.seconds + ' ' + this.state.daily.everyDays.minutes + ' ' + this.hourToCron(this.state.daily.everyDays.hours, this.state.daily.everyDays.hourType) + ' 1/' + this.state.daily.everyDays.days + ' * ? *';\n                            break;\n                        case 'everyWeekDay':\n                            this.ngModel = this.state.daily.everyWeekDay.seconds + ' ' + this.state.daily.everyWeekDay.minutes + ' ' + this.hourToCron(this.state.daily.everyWeekDay.hours, this.state.daily.everyWeekDay.hourType) + ' ? * MON-FRI *';\n                            break;\n                        default:\n                            throw 'Invalid cron daily subtab selection';\n                    }\n                    break;\n                case 'weekly':\n                    var days = this.selectOptions.days.reduce(function (acc, day) {\n                        return _this3.state.weekly[day] ? acc.concat([day]) : acc;\n                    }, []).join(',');\n                    this.ngModel = this.state.weekly.seconds + ' ' + this.state.weekly.minutes + ' ' + this.hourToCron(this.state.weekly.hours, this.state.weekly.hourType) + ' ? * ' + days + ' *';\n                    break;\n                case 'monthly':\n                    switch (this.state.monthly.subTab) {\n                        case 'specificDay':\n                            this.ngModel = this.state.monthly.specificDay.seconds + ' ' + this.state.monthly.specificDay.minutes + ' ' + this.hourToCron(this.state.monthly.specificDay.hours, this.state.monthly.specificDay.hourType) + ' ' + this.state.monthly.specificDay.day + ' 1/' + this.state.monthly.specificDay.months + ' ? *';\n                            break;\n                        case 'specificWeekDay':\n                            this.ngModel = this.state.monthly.specificWeekDay.seconds + ' ' + this.state.monthly.specificWeekDay.minutes + ' ' + this.hourToCron(this.state.monthly.specificWeekDay.hours, this.state.monthly.specificWeekDay.hourType) + ' ? 1/' + this.state.monthly.specificWeekDay.months + ' ' + this.state.monthly.specificWeekDay.day + this.state.monthly.specificWeekDay.monthWeek + ' *';\n                            break;\n                        default:\n                            throw 'Invalid cron monthly subtab selection';\n                    }\n                    break;\n                case 'yearly':\n                    switch (this.state.yearly.subTab) {\n                        case 'specificMonthDay':\n                            this.ngModel = this.state.yearly.specificMonthDay.seconds + ' ' + this.state.yearly.specificMonthDay.minutes + ' ' + this.hourToCron(this.state.yearly.specificMonthDay.hours, this.state.yearly.specificMonthDay.hourType) + ' ' + this.state.yearly.specificMonthDay.day + ' ' + this.state.yearly.specificMonthDay.month + ' ? *';\n                            break;\n                        case 'specificMonthWeek':\n                            this.ngModel = this.state.yearly.specificMonthWeek.seconds + ' ' + this.state.yearly.specificMonthWeek.minutes + ' ' + this.hourToCron(this.state.yearly.specificMonthWeek.hours, this.state.yearly.specificMonthWeek.hourType) + ' ? ' + this.state.yearly.specificMonthWeek.month + ' ' + this.state.yearly.specificMonthWeek.day + this.state.yearly.specificMonthWeek.monthWeek + ' *';\n                            break;\n                        default:\n                            throw 'Invalid cron yearly subtab selection';\n                    }\n                    break;\n                case 'advanced':\n                    this.ngModel = this.state.advanced.expression;\n                    break;\n                default:\n                    throw 'Invalid cron active tab selection';\n            }\n        }\n    }, {\n        key: 'handleModelChange',\n        value: function handleModelChange(cron) {\n            var _this4 = this;\n\n            if (this.currentState === States.DIRTY) {\n                this.currentState = States.CLEAN;\n                return;\n            } else {\n                this.currentState = States.CLEAN;\n            }\n\n            var segments = cron.split(' ');\n            if (segments.length === 6 || segments.length === 7) {\n                var _segments = slicedToArray(segments, 6),\n                    seconds = _segments[0],\n                    minutes = _segments[1],\n                    hours = _segments[2],\n                    dayOfMonth = _segments[3],\n                    month = _segments[4],\n                    dayOfWeek = _segments[5];\n\n                if (cron.match(/\\d+ 0\\/\\d+ \\* 1\\/1 \\* \\? \\*/)) {\n                    this.activeTab = 'minutes';\n                    this.state.minutes.minutes = parseInt(minutes.substring(2));\n                    this.state.minutes.seconds = parseInt(seconds);\n                } else if (cron.match(/\\d+ \\d+ 0\\/\\d+ 1\\/1 \\* \\? \\*/)) {\n                    this.activeTab = 'hourly';\n                    this.state.hourly.hours = parseInt(hours.substring(2));\n                    this.state.hourly.minutes = parseInt(minutes);\n                    this.state.hourly.seconds = parseInt(seconds);\n                } else if (cron.match(/\\d+ \\d+ \\d+ 1\\/\\d+ \\* \\? \\*/)) {\n                    this.activeTab = 'daily';\n                    this.state.daily.subTab = 'everyDays';\n                    this.state.daily.everyDays.days = parseInt(dayOfMonth.substring(2));\n                    var parsedHours = parseInt(hours);\n                    this.state.daily.everyDays.hours = this.processHour(parsedHours);\n                    this.state.daily.everyDays.hourType = this.getHourType(parsedHours);\n                    this.state.daily.everyDays.minutes = parseInt(minutes);\n                    this.state.daily.everyDays.seconds = parseInt(seconds);\n                } else if (cron.match(/\\d+ \\d+ \\d+ \\? \\* MON-FRI \\*/)) {\n                    this.activeTab = 'daily';\n                    this.state.daily.subTab = 'everyWeekDay';\n                    var _parsedHours = parseInt(hours);\n                    this.state.daily.everyWeekDay.hours = this.processHour(_parsedHours);\n                    this.state.daily.everyWeekDay.hourType = this.getHourType(_parsedHours);\n                    this.state.daily.everyWeekDay.minutes = parseInt(minutes);\n                    this.state.daily.everyWeekDay.seconds = parseInt(seconds);\n                } else if (cron.match(/\\d+ \\d+ \\d+ \\? \\* (MON|TUE|WED|THU|FRI|SAT|SUN)(,(MON|TUE|WED|THU|FRI|SAT|SUN))* \\*/)) {\n                    this.activeTab = 'weekly';\n                    this.selectOptions.days.forEach(function (weekDay) {\n                        return _this4.state.weekly[weekDay] = false;\n                    });\n                    dayOfWeek.split(',').forEach(function (weekDay) {\n                        return _this4.state.weekly[weekDay] = true;\n                    });\n                    var _parsedHours2 = parseInt(hours);\n                    this.state.weekly.hours = this.processHour(_parsedHours2);\n                    this.state.weekly.hourType = this.getHourType(_parsedHours2);\n                    this.state.weekly.minutes = parseInt(minutes);\n                    this.state.weekly.seconds = parseInt(seconds);\n                } else if (cron.match(/\\d+ \\d+ \\d+ (\\d+|L|LW|1W) 1\\/\\d+ \\? \\*/)) {\n                    this.activeTab = 'monthly';\n                    this.state.monthly.subTab = 'specificDay';\n                    this.state.monthly.specificDay.day = dayOfMonth;\n                    this.state.monthly.specificDay.months = parseInt(month.substring(2));\n                    var _parsedHours3 = parseInt(hours);\n                    this.state.monthly.specificDay.hours = this.processHour(_parsedHours3);\n                    this.state.monthly.specificDay.hourType = this.getHourType(_parsedHours3);\n                    this.state.monthly.specificDay.minutes = parseInt(minutes);\n                    this.state.monthly.specificDay.seconds = parseInt(seconds);\n                } else if (cron.match(/\\d+ \\d+ \\d+ \\? 1\\/\\d+ (MON|TUE|WED|THU|FRI|SAT|SUN)((#[1-5])|L) \\*/)) {\n                    var day = dayOfWeek.substr(0, 3);\n                    var monthWeek = dayOfWeek.substr(3);\n                    this.activeTab = 'monthly';\n                    this.state.monthly.subTab = 'specificWeekDay';\n                    this.state.monthly.specificWeekDay.monthWeek = monthWeek;\n                    this.state.monthly.specificWeekDay.day = day;\n                    this.state.monthly.specificWeekDay.months = parseInt(month.substring(2));\n                    var _parsedHours4 = parseInt(hours);\n                    this.state.monthly.specificWeekDay.hours = this.processHour(_parsedHours4);\n                    this.state.monthly.specificWeekDay.hourType = this.getHourType(_parsedHours4);\n                    this.state.monthly.specificWeekDay.minutes = parseInt(minutes);\n                    this.state.monthly.specificWeekDay.seconds = parseInt(seconds);\n                } else if (cron.match(/\\d+ \\d+ \\d+ (\\d+|L|LW|1W) \\d+ \\? \\*/)) {\n                    this.activeTab = 'yearly';\n                    this.state.yearly.subTab = 'specificMonthDay';\n                    this.state.yearly.specificMonthDay.month = parseInt(month);\n                    this.state.yearly.specificMonthDay.day = dayOfMonth;\n                    var _parsedHours5 = parseInt(hours);\n                    this.state.yearly.specificMonthDay.hours = this.processHour(_parsedHours5);\n                    this.state.yearly.specificMonthDay.hourType = this.getHourType(_parsedHours5);\n                    this.state.yearly.specificMonthDay.minutes = parseInt(minutes);\n                    this.state.yearly.specificMonthDay.seconds = parseInt(seconds);\n                } else if (cron.match(/\\d+ \\d+ \\d+ \\? \\d+ (MON|TUE|WED|THU|FRI|SAT|SUN)((#[1-5])|L) \\*/)) {\n                    var _day = dayOfWeek.substr(0, 3);\n                    var _monthWeek = dayOfWeek.substr(3);\n                    this.activeTab = 'yearly';\n                    this.state.yearly.subTab = 'specificMonthWeek';\n                    this.state.yearly.specificMonthWeek.monthWeek = _monthWeek;\n                    this.state.yearly.specificMonthWeek.day = _day;\n                    this.state.yearly.specificMonthWeek.month = parseInt(month);\n                    var _parsedHours6 = parseInt(hours);\n                    this.state.yearly.specificMonthWeek.hours = this.processHour(_parsedHours6);\n                    this.state.yearly.specificMonthWeek.hourType = this.getHourType(_parsedHours6);\n                    this.state.yearly.specificMonthWeek.minutes = parseInt(minutes);\n                    this.state.yearly.specificMonthWeek.seconds = parseInt(seconds);\n                } else {\n                    this.activeTab = 'advanced';\n                    this.state.advanced.expression = cron;\n                }\n            } else {\n                throw 'Unsupported cron expression. Expression must be 6 or 7 segments';\n            }\n        }\n    }]);\n    return CronGenComponent;\n}();\n\nvar QUARTZ_REGEX = /^\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?(?:,(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?)*)\\s+(\\?|\\*|(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?(?:,(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[1-7]|MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-|\\/|\\,|#)(?:[1-5]))?(?:L)?(?:,(?:[1-7]|MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-|\\/|\\,|#)(?:[1-5]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))$/;\n\nvar CronGenService = function () {\n    function CronGenService($filter) {\n        classCallCheck(this, CronGenService);\n\n        this.filter = $filter;\n    }\n\n    createClass(CronGenService, [{\n        key: 'isValid',\n        value: function isValid(cronFormat, expression) {\n            var formattedExpression = expression.toUpperCase();\n            switch (cronFormat) {\n                case 'quartz':\n                    return !!formattedExpression.match(QUARTZ_REGEX);\n                default:\n                    throw 'Desired cron format (' + cronFormat + ') is not available';\n            }\n        }\n    }, {\n        key: 'appendInt',\n        value: function appendInt(number) {\n            var value = '' + number;\n            if (value.length > 1) {\n                var secondToLastDigit = value.charAt(value.length - 2);\n                if (secondToLastDigit === '1') {\n                    return this.filter('translate')('CARDINAL_PREFIX');\n                }\n            }\n            var lastDigit = value.charAt(value.length - 1);\n            switch (lastDigit) {\n                case '1':\n                    return this.filter('translate')('FIRST_PREFIX');\n                case '2':\n                    return this.filter('translate')('SECOND_PREFIX');\n                case '3':\n                    return this.filter('translate')('THIRD_PREFIX');\n                default:\n                    return this.filter('translate')('CARDINAL_PREFIX');\n            }\n        }\n    }, {\n        key: 'padNumber',\n        value: function padNumber(number) {\n            return ('' + number).length === 1 ? '0' + number : '' + number;\n        }\n    }, {\n        key: 'range',\n        value: function range(start, end) {\n            if (typeof end === 'undefined') {\n                end = start;\n                start = 0;\n            }\n\n            if (start < 0 || end < 0) throw 'Range values must be positive values';\n\n            if (end > start) {\n                return [].concat(toConsumableArray(new Array(end - start))).map(function (val, idx) {\n                    return idx + start;\n                });\n            } else if (start < end) {\n                return [].concat(toConsumableArray(new Array(start - end))).map(function (val, idx) {\n                    return end - idx;\n                });\n            } else return new Array();\n        }\n    }, {\n        key: 'selectOptions',\n        value: function selectOptions() {\n            return {\n                months: this.range(1, 13),\n                monthWeeks: ['#1', '#2', '#3', '#4', '#5', 'L'],\n                days: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],\n                minutes: this.range(1, 60),\n                fullMinutes: this.range(60),\n                seconds: this.range(60),\n                hours: this.range(1, 24),\n                monthDays: this.range(1, 32),\n                monthDaysWithLasts: ['1W'].concat(toConsumableArray([].concat(toConsumableArray(new Array(31))).map(function (val, idx) {\n                    return '' + (idx + 1);\n                })), ['LW', 'L'])\n            };\n        }\n    }]);\n    return CronGenService;\n}();\n\nvar CronGenTimeSelect = function CronGenTimeSelect($scope, cronGenService) {\n    'ngInject';\n\n    var _this = this;\n\n    classCallCheck(this, CronGenTimeSelect);\n    this.cronGenService = cronGenService;\n\n    this.selectOptions = {\n        minutes: cronGenService.range(60),\n        seconds: cronGenService.range(60),\n        hourTypes: ['AM', 'PM']\n    };\n\n    $scope.$watch('$ctrl.use24HourTime', function () {\n        _this.selectOptions.hours = _this.use24HourTime ? _this.cronGenService.range(24) : _this.cronGenService.range(1, 13);\n    });\n};\n\nangular.module('angular-cron-gen', ['pascalprecht.translate']).config(function ($translateProvider) {\n    $translateProvider.translations('en', {\n        'MINUTES': 'Minutes',\n        'HOURLY': 'Hourly',\n        'DAILY': 'Daily',\n        'WEEKLY': 'Weekly',\n        'MONTHLY': 'Monthly',\n        'YEARLY': 'Yearly',\n        'ADVANCED': 'Advanced',\n        'EVERY': 'Every',\n        'MINUTE': 'minute(s)',\n        'ON_SECOND': 'on second',\n        'HOUR_ON_MINUTE': 'hour(s) on minute',\n        'AND_SECOND': 'and second',\n        'DAY_AT': 'day(s) at',\n        'EVERY_WEEK_WORKING_DAY': 'Every week day (Monday through Friday) at',\n        'MONDAY': 'Monday',\n        'TUESDAY': 'Tuesday',\n        'WEDNESDAY': 'Wednesday',\n        'THURSDAY': 'Thursday',\n        'FRIDAY': 'Friday',\n        'SATURDAY': 'Saturday',\n        'SUNDAY': 'Sunday',\n        'START_TIME': 'Start time',\n        'ON_THE': 'On the',\n        'OF_EVERY': 'of every',\n        'MONTHS_AT': 'month(s) at',\n        'AT': 'at',\n        'OF': 'of',\n        'CRON_EXPRESSION': 'Cron Expression',\n        'MORE_DETAILS': 'More details about how to create these expressions can be found',\n        'HERE': 'here',\n        'LAST_DAY': 'Last day',\n        'LAST_WEEKDAY': 'Last Weekday',\n        'FIRST_WEEKDAY': 'First Weekday',\n        'DAY': 'Day',\n        'FIRST_PREFIX': 'st',\n        'SECOND_PREFIX': 'nd',\n        'THIRD_PREFIX': 'rd',\n        'CARDINAL_PREFIX': 'th',\n        'FIRST': 'First',\n        'SECOND': 'Second',\n        'THIRD': 'Third',\n        'FOURTH': 'Fourth',\n        'FIFTH': 'Fifth',\n        'LAST': 'Last',\n        'JANUARY': 'January',\n        'FEBRUARY': 'February',\n        'MARCH': 'March',\n        'APRIL': 'April',\n        'MAY': 'May',\n        'JUNE': 'June',\n        'JULY': 'July',\n        'AUGUST': 'August',\n        'SEPTEMBER': 'September',\n        'OCTOBER': 'October',\n        'NOVEMBER': 'November',\n        'DECEMBER': 'December'\n    }).translations('it', {\n        'MINUTES': 'Minuti',\n        'HOURLY': 'Orario',\n        'DAILY': 'Giornaliero',\n        'WEEKLY': 'Settimanale',\n        'MONTHLY': 'Mensile',\n        'YEARLY': 'Annuale',\n        'ADVANCED': 'Avanzato',\n        'EVERY': 'Ogni',\n        'MINUTE': 'minuto/i',\n        'ON_SECOND': 'al secondo',\n        'HOUR_ON_MINUTE': 'ora/e al minuto',\n        'AND_SECOND': 'e secondi',\n        'DAY_AT': 'giorno/i alle',\n        'EVERY_WEEK_WORKING_DAY': \"Ogni giorno della settimana (dal Lunedi' al Venerdi') alle\",\n        'MONDAY': \"Lunedi'\",\n        'TUESDAY': \"Martedi'\",\n        'WEDNESDAY': \"Mercoledi'\",\n        'THURSDAY': \"Giovedi'\",\n        'FRIDAY': \"Venerdi'\",\n        'SATURDAY': 'Sabato',\n        'SUNDAY': 'Domenica',\n        'START_TIME': 'Inizio alle',\n        'ON_THE': 'Il',\n        'OF_EVERY': 'di ogni',\n        'MONTHS_AT': 'mese/i il',\n        'AT': 'il',\n        'OF': 'di',\n        'CRON_EXPRESSION': 'Sintassi Cron',\n        'MORE_DETAILS': 'Maggiori informazioni sulla sintassi Cron li potete trovare',\n        'HERE': 'qui',\n        'LAST_DAY': 'Ultimo giorno',\n        'LAST_WEEKDAY': 'Fine settimana',\n        'FIRST_WEEKDAY': 'Inizio settimana',\n        'DAY': 'Giorno',\n        'FIRST_PREFIX': '',\n        'SECOND_PREFIX': '',\n        'THIRD_PREFIX': '',\n        'CARDINAL_PREFIX': '',\n        'FIRST': 'Primo',\n        'SECOND': 'Secondo',\n        'THIRD': 'Terzo',\n        'FOURTH': 'Quarto',\n        'FIFTH': 'Quinto',\n        'LAST': 'Ultimo',\n        'JANUARY': 'Gennaio',\n        'FEBRUARY': 'Febbraio',\n        'MARCH': 'Marzo',\n        'APRIL': 'Aprile',\n        'MAY': 'Maggio',\n        'JUNE': 'Giugno',\n        'JULY': 'Luglio',\n        'AUGUST': 'Agosto',\n        'SEPTEMBER': 'Settembre',\n        'OCTOBER': 'Ottobre',\n        'NOVEMBER': 'Novembre',\n        'DECEMBER': 'Dicembre'\n    }).translations('de', {\n        'MINUTES': 'Minütlich',\n        'HOURLY': 'Stündlich',\n        'DAILY': 'Täglich',\n        'WEEKLY': 'Wöchentlich',\n        'MONTHLY': 'Monatlich',\n        'YEARLY': 'Jährlich',\n        'ADVANCED': 'Cron Ausdruck',\n        'EVERY': 'Jede(n)',\n        'MINUTE': 'Minute(n)',\n        'ON_SECOND': 'auf Sekunde',\n        'HOUR_ON_MINUTE': 'Stunde(n) auf Minute',\n        'AND_SECOND': 'und SeKunde',\n        'DAY_AT': 'Tag(e) um',\n        'EVERY_WEEK_WORKING_DAY': \"Jeden Wochentag (Montag bis Freitag) um\",\n        'MONDAY': \"Montag'\",\n        'TUESDAY': \"Dienstag'\",\n        'WEDNESDAY': \"Mittwoch'\",\n        'THURSDAY': \"Donnerstag'\",\n        'FRIDAY': \"Freitag'\",\n        'SATURDAY': 'Samstag',\n        'SUNDAY': 'Sonntag',\n        'START_TIME': 'Startzeit',\n        'ON_THE': 'Am',\n        'OF_EVERY': 'an jedem',\n        'MONTHS_AT': 'Monat(e) um',\n        'AT': 'um',\n        'OF': 'im',\n        'CRON_EXPRESSION': 'Cron Ausdruck',\n        'MORE_DETAILS': 'Weitere Informationen zum Erstellen dieser Ausdrücke finden Sie ',\n        'HERE': 'hier',\n        'LAST_DAY': 'letzter Tag',\n        'LAST_WEEKDAY': 'letzter Wochentag',\n        'FIRST_WEEKDAY': 'erster Wochentag',\n        'DAY': 'Tag',\n        'FIRST_PREFIX': '',\n        'SECOND_PREFIX': '',\n        'THIRD_PREFIX': '',\n        'CARDINAL_PREFIX': '',\n        'FIRST': 'First',\n        'SECOND': 'Second',\n        'THIRD': 'Third',\n        'FOURTH': 'Fourth',\n        'FIFTH': 'Fifth',\n        'LAST': 'Last',\n        'JANUARY': 'January',\n        'FEBRUARY': 'February',\n        'MARCH': 'March',\n        'APRIL': 'April',\n        'MAY': 'May',\n        'JUNE': 'June',\n        'JULY': 'July',\n        'AUGUST': 'August',\n        'SEPTEMBER': 'September',\n        'OCTOBER': 'October',\n        'NOVEMBER': 'November',\n        'DECEMBER': 'December'\n    });\n}).service('cronGenService', CronGenService).component('cronGenTimeSelect', {\n    bindings: {\n        isDisabled: '<',\n        onChange: '&',\n        isRequired: '<',\n        model: '=',\n        selectClass: '<',\n        use24HourTime: '<',\n        hideSeconds: '<',\n        namePrefix: '@'\n    },\n    templateUrl: 'angular-cron-gen/cron-gen-time-select.html',\n    controller: CronGenTimeSelect\n}).component('cronGen', {\n    bindings: {\n        ngModel: '=',\n        ngDisabled: '<',\n        options: '<',\n        cronFormat: '@',\n        templateUrl: '@',\n        name: '@'\n    },\n    require: {\n        ngModelCtrl: 'ngModel',\n        ngDisabledCtrl: '?ngDisabled',\n        formCtrl: '^?form'\n    },\n    templateUrl: function templateUrl($attrs) {\n        'ngInject';\n\n        return $attrs.templateUrl || 'angular-cron-gen/cron-gen.html';\n    },\n\n    controller: CronGenComponent\n});\n\n}());\n","angular.module('angular-cron-gen').run(['$templateCache', function($templateCache) {$templateCache.put('angular-cron-gen/cron-gen-time-select.html','<div class=\"inline-block\">\\n    <select class=\"hours\"\\n            name=\"{{namePrefix}}Hours\"\\n            ng-disabled=\"$ctrl.isDisabled\"\\n            ng-change=\"$ctrl.onChange()\"\\n            ng-required=\"$ctrl.isRequired\"\\n            ng-model=\"$ctrl.model.hours\"\\n            ng-options=\"hour as $ctrl.cronGenService.padNumber(hour) for hour in $ctrl.selectOptions.hours\"\\n            ng-class=\"$ctrl.selectClass\">\\n    </select>\\n    <select class=\"minutes\"\\n            name=\"{{namePrefix}}Minutes\"\\n            ng-disabled=\"$ctrl.isDisabled\"\\n            ng-change=\"$ctrl.onChange()\"\\n            ng-required=\"$ctrl.isRequired\"\\n            ng-model=\"$ctrl.model.minutes\"\\n            ng-options=\"minute as $ctrl.cronGenService.padNumber(minute) for minute in $ctrl.selectOptions.minutes\"\\n            ng-class=\"$ctrl.selectClass\">\\n    </select>\\n    <select class=\"seconds\"\\n            name=\"{{namePrefix}}Seconds\"\\n            ng-show=\"!$ctrl.hideSeconds\"\\n            ng-disabled=\"$ctrl.isDisabled\"\\n            ng-change=\"$ctrl.onChange()\"\\n            ng-required=\"$ctrl.isRequired\"\\n            ng-model=\"$ctrl.model.seconds\"\\n            ng-options=\"second as $ctrl.cronGenService.padNumber(second) for second in $ctrl.selectOptions.seconds\"\\n            ng-class=\"$ctrl.selectClass\">\\n    </select>\\n    <select class=\"hour-types\"\\n            name=\"{{namePrefix}}HourType\"\\n            ng-show=\"!$ctrl.use24HourTime\"\\n            ng-disabled=\"$ctrl.isDisabled\"\\n            ng-change=\"$ctrl.onChange()\"\\n            ng-model=\"$ctrl.model.hourType\"\\n            ng-options=\"hourType as hourType for hourType in $ctrl.selectOptions.hourTypes\"\\n            ng-required=\"$ctrl.isRequired\"\\n            ng-class=\"$ctrl.selectClass\">\\n    </select>\\n</div>');\n$templateCache.put('angular-cron-gen/cron-gen.html','<!doctype html>\\n<div class=\"cron-gen-main\" ng-cloak>\\n    <ul class=\"nav nav-tabs tab-nav\" role=\"tablist\">\\n        <li ng-class=\"{\\'active\\': $ctrl.activeTab === \\'minutes\\'}\"\\n            ng-show=\"!$ctrl.parsedOptions.hideMinutesTab\"\\n            role=\"presentation\">\\n            <a href=\"#\"\\n               aria-controls=\"minutes\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'minutes\\')\">\\n                {{ \\'MINUTES\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideHourlyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'hourly\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"hourly\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'hourly\\')\">\\n                {{ \\'HOURLY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideDailyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'daily\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"daily\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'daily\\')\">\\n                {{ \\'DAILY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideWeeklyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'weekly\\'}\">\\n            <a href=\"#\" aria-controls=\"weekly\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'weekly\\')\">\\n                {{ \\'WEEKLY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideMonthlyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'monthly\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"monthly\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'monthly\\')\">\\n                {{ \\'MONTHLY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideYearlyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'yearly\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"yearly\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'yearly\\')\">\\n                {{ \\'YEARLY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideAdvancedTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'advanced\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"advanced\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'advanced\\')\">\\n                {{ \\'ADVANCED\\' | translate}}\\n            </a>\\n        </li>\\n    </ul>\\n    <div class=\"cron-gen-container\">\\n        <div class=\"row\">\\n            <div class=\"col-xs-12\">\\n                <div class=\"tab-content\">\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideMinutesTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'minutes\\'}\">\\n                        <div class=\"well well-small\">\\n                            {{ \\'EVERY\\' | translate}}\\n                            <select class=\"minutes\"\\n                                    name=\"minutesMinutes\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'minutes\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.minutes.minutes\"\\n                                    ng-required=\"$ctrl.activeTab === \\'minutes\\'\"\\n                                    ng-options=\"minute as minute for minute in $ctrl.selectOptions.minutes\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'MINUTE\\' | translate}}\\n                            <span ng-show=\"!$ctrl.parsedOptions.hideSeconds\"> {{ \\'ON_SECOND\\' | translate }} </span>\\n                            <select class=\"seconds\"\\n                                    name=\"minutesSeconds\"\\n                                    ng-show=\"!$ctrl.parsedOptions.hideSeconds\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'minutes\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.minutes.seconds\"\\n                                    ng-required=\"$ctrl.activeTab === \\'minutes\\'\"\\n                                    ng-options=\"second as $ctrl.cronGenService.padNumber(second) for second in $ctrl.selectOptions.seconds\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideHourlyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'hourly\\'}\">\\n                        <div class=\"well well-small\">\\n                            {{ \\'EVERY\\' | translate}}\\n                            <select class=\"hours\"\\n                                    name=\"hourlyHours\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'hourly\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.hourly.hours\"\\n                                    ng-required=\"$ctrl.activeTab === \\'hourly\\'\"\\n                                    ng-options=\"hour as hour for hour in $ctrl.selectOptions.hours\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'HOUR_ON_MINUTE\\' | translate}}\\n                            <select class=\"minutes\"\\n                                    name=\"hourlyMinutes\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'hourly\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.hourly.minutes\"\\n                                    ng-required=\"$ctrl.activeTab === \\'hourly\\'\"\\n                                    ng-options=\"minute as $ctrl.cronGenService.padNumber(minute) for minute in $ctrl.selectOptions.fullMinutes\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            <span ng-show=\"!$ctrl.parsedOptions.hideSeconds\">{{ \\'AND_SECOND\\' | translate}}</span>\\n                            <select class=\"seconds\"\\n                                    name=\"hourlySeconds\"\\n                                    ng-show=\"!$ctrl.parsedOptions.hideSeconds\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'hourly\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.hourly.seconds\"\\n                                    ng-required=\"$ctrl.activeTab === \\'hourly\\'\"\\n                                    ng-options=\"second as $ctrl.cronGenService.padNumber(second) for second in $ctrl.selectOptions.seconds\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideDailyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'daily\\'}\">\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"everyDays\"\\n                                   name=\"daily-radio\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.daily.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   checked=\"checked\">\\n                            {{ \\'EVERY\\' | translate}}\\n                            <select class=\"days\"\\n                                    name=\"dailyEveryDaysDays\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'daily\\' || $ctrl.state.daily.subTab !== \\'everyDays\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.daily.everyDays.days\"\\n                                    ng-required=\"$ctrl.activeTab === \\'daily\\' && $ctrl.state.daily.subTab === \\'everyDays\\'\"\\n                                    ng-options=\"monthDay as monthDay for monthDay in $ctrl.selectOptions.monthDays\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'DAY_AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'daily\\' || $ctrl.state.daily.subTab !== \\'everyDays\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"dailyEveryDays\"\\n                                    is-required=\"$ctrl.activeTab === \\'daily\\' && $ctrl.state.daily.subTab === \\'everyDays\\'\"\\n                                    model=\"$ctrl.state.daily.everyDays\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"everyWeekDay\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.daily.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"daily-radio\">\\n                            {{ \\'EVERY_WEEK_WORKING_DAY\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'daily\\' || $ctrl.state.daily.subTab !== \\'everyWeekDay\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"dailyEveryWeekDay\"\\n                                    is-required=\"$ctrl.activeTab === \\'daily\\' && $ctrl.state.daily.subTab === \\'everyWeekDay\\'\"\\n                                    model=\"$ctrl.state.daily.everyWeekDay\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideWeeklyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'weekly\\'}\">\\n                        <div class=\"well well-small row\">\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyMON\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.MON\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'MONDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyTUE\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.TUE\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'TUESDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyWED\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.WED\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'WEDNESDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyTHU\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.THU\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'THURSDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyFRI\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.FRI\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'FRIDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklySAT\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.SAT\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'SATURDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklySUN\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.SUN\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'SUNDAY\\' | translate}}\\n                            </div>\\n                        </div>\\n                        {{ \\'START_TIME\\' | translate}}\\n                        <cron-gen-time-select\\n                                is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                on-change=\"$ctrl.regenerateCron()\"\\n                                name-prefix=\"weekly\"\\n                                is-required=\"$ctrl.activeTab === \\'weekly\\'\"\\n                                model=\"$ctrl.state.weekly\"\\n                                select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                        </cron-gen-time-select>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideMonthlyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'monthly\\'}\">\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"specificDay\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.monthly.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"monthly-radio\"\\n                                   checked=\"checked\">\\n                            {{ \\'ON_THE\\' | translate}}\\n                            <select class=\"month-days\"\\n                                    name=\"monthlySpecificDayDay\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificDay.day\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificDay\\'\"\\n                                    ng-options=\"monthDaysWithLast as $ctrl.monthDayDisplay(monthDaysWithLast) for monthDaysWithLast in $ctrl.selectOptions.monthDaysWithLasts\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'OF_EVERY\\' | translate}}\\n                            <select class=\"months-small\"\\n                                    name=\"monthlySpecificDayMonths\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificDay.months\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificDay\\'\"\\n                                    ng-options=\"month as month for month in $ctrl.selectOptions.months\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'MONTHS_AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificDay\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"monthlySpecificDay\"\\n                                    is-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificDay\\'\"\\n                                    model=\"$ctrl.state.monthly.specificDay\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"specificWeekDay\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.monthly.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"monthly-radio\">\\n                            {{ \\'ON_THE\\' | translate}}\\n                            <select class=\"day-order-in-month\"\\n                                    name=\"monthlySpecificWeekDayMonthWeek\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificWeekDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificWeekDay.monthWeek\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificWeekDay\\'\"\\n                                    ng-options=\"monthWeek as $ctrl.monthWeekDisplay(monthWeek) for monthWeek in $ctrl.selectOptions.monthWeeks\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            <select class=\"week-days\"\\n                                    name=\"monthlySpecificWeekDayDay\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificWeekDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificWeekDay.day\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificWeekDay\\'\"\\n                                    ng-options=\"day as $ctrl.dayDisplay(day) for day in $ctrl.selectOptions.days\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'OF_EVERY\\' | translate}}\\n                            <select class=\"months-small\"\\n                                    name=\"monthlySpecificWeekDayMonths\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificWeekDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificWeekDay.months\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificWeekDay\\'\"\\n                                    ng-options=\"month as month for month in $ctrl.selectOptions.months\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'MONTHS_AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificWeekDay\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"monthlySpecificWeekDay\"\\n                                    is-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificWeekDay\\'\"\\n                                    model=\"$ctrl.state.monthly.specificWeekDay\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideYearlyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'yearly\\'}\">\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"specificMonthDay\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.yearly.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"yearly-radio\">\\n                            {{ \\'EVERY\\' | translate}}\\n                            <select class=\"months\"\\n                                    name=\"yearlySpecificMonthDayMonth\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthDay.month\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthDay\\'\"\\n                                    ng-options=\"month as $ctrl.monthDisplay(month) for month in $ctrl.selectOptions.months\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'ON_THE\\' | translate}}\\n                            <select class=\"month-days\"\\n                                    name=\"yearlySpecificMonthDayDay\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthDay.day\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthDay\\'\"\\n                                    ng-options=\"monthDaysWithLast as $ctrl.monthDayDisplay(monthDaysWithLast) for monthDaysWithLast in $ctrl.selectOptions.monthDaysWithLasts\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthDay\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    is-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthDay\\'\"\\n                                    name-prefix=\"yearlySpecificMonthDay\"\\n                                    model=\"$ctrl.state.yearly.specificMonthDay\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"specificMonthWeek\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.yearly.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"yearly-radio\">\\n                            {{ \\'ON_THE\\' | translate}}\\n                            <select class=\"day-order-in-month\"\\n                                    name=\"yearlySpecificMonthWeekMonthWeek\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthWeek\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthWeek.monthWeek\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthWeek\\'\"\\n                                    ng-options=\"monthWeek as $ctrl.monthWeekDisplay(monthWeek) for monthWeek in $ctrl.selectOptions.monthWeeks\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            <select class=\"week-days\"\\n                                    name=\"yearlySpecificMonthWeekMonthDay\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthWeek\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthWeek.day\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthWeek\\'\"\\n                                    ng-options=\"day as $ctrl.dayDisplay(day) for day in $ctrl.selectOptions.days\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'OF\\' | translate}}\\n                            <select class=\"months\"\\n                                    name=\"yearlySpecificMonthWeekMontMonth\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthWeek\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthWeek.month\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthWeek\\'\"\\n                                    ng-options=\"month as $ctrl.monthDisplay(month) for month in $ctrl.selectOptions.months\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthWeek\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"yearlySpecificMonthWeek\"\\n                                    is-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthWeek\\'\"\\n                                    model=\"$ctrl.state.yearly.specificMonthWeek\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideAdvancedTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'advanced\\'}\">\\n                        {{ \\'CRON_EXPRESSION\\' | translate}}\\n                        <input type=\"text\"\\n                               class=\"advanced-cron-gen-input\"\\n                               name=\"advancedExpression\"\\n                               ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'advanced\\'\"\\n                               ng-change=\"$ctrl.regenerateCron()\"\\n                               ng-model=\"$ctrl.state.advanced.expression\"\\n                               ng-required=\"$ctrl.activeTab === \\'advanced\\'\"\\n                               ng-class=\"$ctrl.parsedOptions.formInputClass\">\\n\\n                        <p>{{ \\'MORE_DETAILS\\' | translate}} <a\\n                                href=\"http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger.html\"\\n                                target=\"_blank\">{{ \\'HERE\\' | translate}}</a>.</p>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n');}]);"]}